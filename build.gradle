plugins {
    id 'java'
    id 'war' // WAR 플러그인 추가
    id 'org.springframework.boot' version '3.1.10' // 3.1 시리즈의 최신 안정 버전
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco' // Jacoco 플러그인 추가
}

group = 'com.samsung'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // 모든 구성에 대해 의존성 충돌 해결을 위한 강제 버전 설정
    all {
        resolutionStrategy {
            // jackson-core 2.18.2가 Java 22(메이저 버전 66) 클래스를 포함하여 JDK 21에서 오류가 발생하므로
            // 2.18.0 버전으로 강제하여 multi-release JAR의 문제를 회피합니다.
            force 'com.fasterxml.jackson.core:jackson-core:2.18.0'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring 관련 의존성
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        // Tomcat 제외 (필요시 Undertow 등으로 변경)
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Oracle Database
    implementation 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'
    
    // HikariCP 커넥션 풀 (Spring Boot에 내장되어 있지만 명시적으로 추가)
    implementation 'com.zaxxer:HikariCP:5.1.0'
    
    // DataSource 설정을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    
    // 기존 MySQL 대신 Oracle 사용
    // implementation 'mysql:mysql-connector-java:8.0.23'
    
    // Apache Commons Lang
    implementation 'org.apache.commons:commons-lang3'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    
    // Instancio - 테스트 데이터 생성기
    implementation 'org.instancio:instancio-core:3.6.0'
    testImplementation 'org.instancio:instancio-junit:3.6.0'
    
    // Cucumber BDD 테스트 프레임워크
    testImplementation 'io.cucumber:cucumber-java:7.15.0'
    testImplementation 'io.cucumber:cucumber-spring:7.15.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.15.0'
    testImplementation 'org.junit.platform:junit-platform-suite:1.10.2'
    
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    // Junit4
    testImplementation 'junit:junit:4.13.2'
	//testImplementation 'io.cucumber:cucumber-junit:7.15.0'
}

tasks.named('test') {
    useJUnitPlatform()
    
    // Cucumber 테스트 설정
    systemProperty 'cucumber.junit-platform.naming-strategy', 'long'
    systemProperty 'cucumber.glue', 'com.samsung.stepdefs'
    systemProperty 'cucumber.plugin', 'pretty, html:build/reports/cucumber/cucumber-report.html'
}

// Jacoco 설정 (필요에 따라 toolVersion 조정)
jacoco {
    toolVersion = "0.8.8"
}

// Cucumber 보고서를 생성하는 태스크 추가
task cucumberReports {
    dependsOn 'test'
    doLast {
        println "Cucumber 보고서가 build/reports/cucumber 디렉토리에 생성되었습니다."
    }
}