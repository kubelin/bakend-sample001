<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.samsung.members.dao.MemberDAO">
  
    <!-- 결과 매핑 -->
    <resultMap id="memberResultMap" type="com.samsung.members.dao.dto.MemberEntity">
        <id property="memberId" column="MEMBER_ID"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <result property="email" column="EMAIL"/>
        <result property="phoneNumber" column="PHONE_NUMBER"/>
        <result property="status" column="STATUS"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="updatedDate" column="UPDATED_DATE"/>
    </resultMap>
    
    <!-- 공통 SELECT 구문 -->
    <sql id="selectMember">
        SELECT 
            MEMBER_ID, 
            MEMBER_NAME, 
            EMAIL, 
            PHONE_NUMBER, 
            STATUS,
            CREATED_DATE,
            UPDATED_DATE
        FROM 
            MEMBERS 
    </sql>
    
    <!-- 정렬 구문 -->
    <sql id="orderBy">
        <if test="sortBy != null and sortDirection != null">
            ORDER BY 
            <choose>
                <when test="sortBy == 'memberName'">MEMBER_NAME</when>
                <when test="sortBy == 'email'">EMAIL</when>
                <when test="sortBy == 'status'">STATUS</when>
                <when test="sortBy == 'createdDate'">CREATED_DATE</when>
                <otherwise>MEMBER_ID</otherwise>
            </choose>
            <choose>
                <when test="sortDirection == 'DESC'">DESC</when>
                <otherwise>ASC</otherwise>
            </choose>
        </if>
        <if test="sortBy == null or sortDirection == null">
            ORDER BY MEMBER_ID ASC
        </if>
    </sql>

    <!-- ID로 회원 조회 -->
    <select id="findById" resultMap="memberResultMap">
        <include refid="selectMember"/>
        WHERE 
            MEMBER_ID = #{memberId}
    </select>
    
    <!-- 이름으로 회원 검색 -->
    <select id="findByNameContaining" resultMap="memberResultMap">
        <include refid="selectMember"/>
        WHERE 
            MEMBER_NAME LIKE '%' || #{keyword} || '%'
        <include refid="orderBy"/>
        <if test="offset != null and limit != null">
            OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>
    
    <!-- 이름으로 검색된 회원 수 -->
    <select id="countByNameContaining" resultType="int">
        SELECT 
            COUNT(*)
        FROM 
            MEMBERS
        WHERE 
            MEMBER_NAME LIKE '%' || #{keyword} || '%'
    </select>
    
    <!-- 
		전체 회원 조회 for over 11g
    <select id="findAll" resultMap="memberResultMap">
        <include refid="selectMember"/>
        <include refid="orderBy"/>
        <if test="offset != null and limit != null">
            OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select> 
    -->
    
    <!-- 전체 회원 조회 -->
	<select id="findAll" resultMap="memberResultMap">
	    SELECT * FROM (
	        SELECT a.*, ROWNUM rnum FROM (
	            <include refid="selectMember"/>
	            <include refid="orderBy"/>
	        ) a WHERE 
	        <![CDATA[ ROWNUM <= #{offset} + #{limit} ]]>	        
	    ) WHERE rnum > #{offset}
	</select>
    
    <!-- 전체 회원 수 -->
    <select id="countAll" resultType="int">
        SELECT 
            COUNT(*)
        FROM 
            MEMBERS
    </select>
    
    <!-- 회원 정보 저장 -->
    <insert id="save" parameterType="com.samsung.members.dao.dto.MemberEntity">
        <selectKey keyProperty="memberId" resultType="long" order="BEFORE">
            SELECT MEMBERS_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO MEMBERS (
            MEMBER_ID, 
            MEMBER_NAME, 
            EMAIL, 
            PHONE_NUMBER, 
            STATUS,
            CREATED_DATE,
            UPDATED_DATE
        ) VALUES (
            #{memberId},
            #{memberName},
            #{email},
            #{phoneNumber},
            #{status},
            SYSTIMESTAMP,
            SYSTIMESTAMP
        )
    </insert>
    
    <!-- 회원 정보 수정 -->
    <update id="update" parameterType="com.samsung.members.dao.dto.MemberEntity">
        UPDATE MEMBERS
        SET 
            MEMBER_NAME = #{memberName},
            EMAIL = #{email},
            PHONE_NUMBER = #{phoneNumber},
            STATUS = #{status},
            UPDATED_DATE = SYSTIMESTAMP
        WHERE 
            MEMBER_ID = #{memberId}
    </update>
    
    <!-- 회원 정보 삭제 -->
    <delete id="deleteById">
        DELETE FROM MEMBERS
        WHERE 
            MEMBER_ID = #{memberId}
    </delete>
    
</mapper>